{"ast":null,"code":"var _jsxFileName = \"/Users/rohithmandavilli/Desktop/Dartmouth/Projects/absentee-ballot-form/src/components/registration.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport PageHeader from './pageheader.js';\nimport '../styles/registration.scss';\nimport '../styles/modals.scss';\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleShowForm = () => {\n      this.setState(prevState => ({\n        showForm: !prevState.showForm\n      }));\n      console.log(this.state.showForm);\n    };\n\n    this.showFormModal = () => {\n      return React.createElement(Modal, {\n        className: \"prizes-modal-content\",\n        id: \"prizes-mod-content\",\n        show: this.state.showAddRewardModal,\n        onHide: this.toggleAddRewardModal,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        className: \"prizes-modal-header\",\n        id: \"prizes-mod-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        id: \"prize-mod-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Add Reward\")), React.createElement(Modal.Body, {\n        className: \"prizes-modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"add-reward\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Reward Name:\", React.createElement(\"input\", {\n        className: \"reward-form-labels\",\n        type: \"text\",\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Reward Points:\", React.createElement(\"input\", {\n        className: \"reward-form-labels\",\n        type: \"text\",\n        name: \"points\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Amount Available:\", React.createElement(\"input\", {\n        className: \"reward-form-labels\",\n        type: \"text\",\n        name: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Description:\", React.createElement(\"input\", {\n        className: \"reward-form-labels\",\n        type: \"text\",\n        name: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        className: \"prizes-modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"prize-modal-button\",\n        onClick: () => this.toggleAddRewardModal(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        className: \"prize-modal-button\",\n        type: \"submit\",\n        onClick: () => this.handleSubmit(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Add Reward\")));\n    };\n\n    this.state = {\n      showForm: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"registration-form-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Click the following button to fill out an absentee ballot! Note that once the form is complete, the application will automatically be submitted, and you will receive a ballot at your given address\"), React.createElement(Button, {\n      className: \"show-form-button\",\n      onClick: () => this.toggleShowForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Complete Form\"));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/Users/rohithmandavilli/Desktop/Dartmouth/Projects/absentee-ballot-form/src/components/registration.js"],"names":["React","Component","Button","Modal","PageHeader","RegistrationForm","constructor","props","toggleShowForm","setState","prevState","showForm","console","log","state","showFormModal","showAddRewardModal","toggleAddRewardModal","handleSubmit","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport PageHeader from './pageheader.js'\nimport '../styles/registration.scss'\nimport '../styles/modals.scss';\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: false,\n    };\n  }\n\n  toggleShowForm = () => {\n    this.setState(prevState => ({\n      showForm: !prevState.showForm,\n    }));\n    console.log(this.state.showForm);\n  }\n\n  showFormModal = () => {\n    return (\n      <Modal className=\"prizes-modal-content\" id=\"prizes-mod-content\" show={this.state.showAddRewardModal} onHide={this.toggleAddRewardModal} centered>\n        <Modal.Header className=\"prizes-modal-header\" id=\"prizes-mod-head\">\n          <Modal.Title id=\"prize-mod-title\">Add Reward</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"prizes-modal-body\">\n          <form id=\"add-reward\" onSubmit={this.handleSubmit}>\n            <p>\n              Reward Name:\n              <input className=\"reward-form-labels\" type=\"text\" name=\"name\" />\n            </p>\n            <p>\n              Reward Points:\n              <input className=\"reward-form-labels\" type=\"text\" name=\"points\" />\n            </p>\n            <p>\n              Amount Available:\n              <input className=\"reward-form-labels\" type=\"text\" name=\"amount\" />\n            </p>\n            <p>\n              Description:\n              <input className=\"reward-form-labels\" type=\"text\" name=\"description\" />\n            </p>\n          </form>\n        </Modal.Body>\n        <Modal.Footer className=\"prizes-modal-footer\">\n          <Button className=\"prize-modal-button\" onClick={() => this.toggleAddRewardModal()}>Cancel</Button>\n          <Button className=\"prize-modal-button\" type=\"submit\" onClick={() => this.handleSubmit()}>Add Reward</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n\n  render() {\n    return (\n      <div className=\"registration-form-page\">\n          <PageHeader></PageHeader>\n          <p>Click the following button to fill out an absentee ballot! Note that once the form is complete, the application will automatically\n          be submitted, and you will receive a ballot at your given address</p>\n          <Button className=\"show-form-button\" onClick={() => this.toggleShowForm()}>Complete Form</Button>\n      </div>\n    );\n  }\n}\n\nexport default RegistrationForm\n"]},"metadata":{},"sourceType":"module"}