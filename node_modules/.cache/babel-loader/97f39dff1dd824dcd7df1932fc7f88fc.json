{"ast":null,"code":"var _jsxFileName = \"/Users/rohithmandavilli/Desktop/Dartmouth/Projects/absentee-ballot-form/src/components/registration.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport PageHeader from './pageheader.js';\nimport '../styles/registration.scss';\nimport '../styles/modals.scss';\nimport SignaturePad from 'react-signature-canvas';\nimport AbsenteeApplication from '../images/absentee-ballot.png';\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleShowForm = () => {\n      this.setState(prevState => ({\n        showForm: !prevState.showForm\n      }));\n    };\n\n    this.togglePreview = () => {\n      this.setState(prevState => ({\n        previewPDF: !prevState.previewPDF\n      }));\n      console.log(this.state.previewPDF);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      console.log(\"ok we made it to the preview\");\n      console.log(this.state);\n      this.toggleShowForm();\n      this.togglePreview();\n      console.log(this.state);\n      this.showPDFPreview();\n    };\n\n    this.clearCanvas = () => {\n      this.sigPad.clear();\n    };\n\n    this.trimAndSaveCanvas = () => {\n      this.setState({\n        trimmedDataURL: this.sigPad.getTrimmedCanvas().toDataURL('image/png')\n      });\n    };\n\n    this.handleSubmitApp = () => {\n      this.togglePreview();\n    };\n\n    this.showPDFPreview = () => {\n      return React.createElement(Modal, {\n        id: \"mod-application-previw\",\n        show: this.state.previewPDF,\n        onHide: this.togglePreview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Application Preview\")), React.createElement(\"div\", {\n        className: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"application-image\",\n        src: AbsenteeApplication,\n        alt: \"application-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"image-last-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.lastName), React.createElement(\"p\", {\n        className: \"image-first-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.firstName), React.createElement(\"p\", {\n        className: \"image-middle-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.middleName), React.createElement(\"p\", {\n        className: \"image-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.titleName), React.createElement(\"p\", {\n        className: \"image-home-address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.homeAddress), React.createElement(\"p\", {\n        className: \"image-cityname-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.cityNameH), React.createElement(\"p\", {\n        className: \"image-ziopcode-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.zipCodeH), React.createElement(\"p\", {\n        className: \"image-street-number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.streetNum), React.createElement(\"p\", {\n        className: \"image-street-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.homeAddress), React.createElement(\"p\", {\n        className: \"image-cityname-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.cityNameH), React.createElement(\"p\", {\n        className: \"image-ziopcode-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.zipCodeH), React.createElement(\"p\", {\n        className: \"image-street-number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.streetNum)), React.createElement(Modal.Footer, {\n        className: \"ballot-modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"ballot-modal-button\",\n        onClick: () => this.togglePreview(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        className: \"ballot-modal-button\",\n        type: \"submit\",\n        onClick: () => this.handleSubmitApp(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Yes this looks right!\")));\n    };\n\n    this.showFormModal = () => {\n      return React.createElement(Modal, {\n        show: this.state.showForm,\n        onHide: this.toggleShowForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Absentee Ballot Application\")), React.createElement(Modal.Title, {\n        id: \"section-modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Modal.Body, {\n        className: \"ballot-modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"applicant-info-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"First Name:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"firstName\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Middle Name:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"middleName\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Last Name:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"lastName\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Title (Jr., Sr., II, III) (N/A if nothing):\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"titleName\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })))), React.createElement(Modal.Title, {\n        id: \"section-modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Address Information\"), React.createElement(Modal.Body, {\n        className: \"ballot-modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"applicant-info-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        id: \"address-modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"This is where you last registered to vote, if you don't know, please put your last dorm number and name.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Home Address:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"homeAddress\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        id: \"home-address-example-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"(ex: '307 Richardson Hall' or '3 Ivy Lane')\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Modal.Title, {\n        id: \"address-modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"This is where your ballot will be mailed. Due to uncertainty regarding when the mail will be sent, please list where you will be at the end of August\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Street Number/P.O. Box:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"streetNum\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Street Name:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"streetName\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Apt/Unit Name (N/A if nothing):\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"aptNum\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"City/Town:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"cityNameM\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"State:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"stateNameM\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Zip Code:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"zipCodeM\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })))), React.createElement(Modal.Title, {\n        id: \"section-modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Contact Information\"), React.createElement(Modal.Body, {\n        className: \"ballot-modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"applicant-info-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Phone Number:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"phoneNum\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Email Address:\", React.createElement(\"input\", {\n        className: \"ballot-form-labels\",\n        type: \"text\",\n        name: \"emailAddress\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Signature:\")), React.createElement(\"div\", {\n        className: \"sigContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(SignaturePad, {\n        canvasProps: {\n          width: 400,\n          height: 200,\n          className: \"sigPad\"\n        },\n        ref: ref => {\n          this.sigPad = ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"signature-clear-button\",\n        onClick: () => this.clearCanvas(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(Button, {\n        className: \"signature-save-button\",\n        onClick: () => this.trimAndSaveCanvas(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Save Signature\")), React.createElement(Modal.Footer, {\n        className: \"ballot-modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"ballot-modal-button\",\n        onClick: () => this.toggleShowForm(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        className: \"ballot-modal-button\",\n        type: \"submit\",\n        onClick: () => this.handleSubmit(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Submit Application\")));\n    };\n\n    this.state = {\n      showForm: false,\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      titleName: \"\",\n      homeAddress: \"\",\n      cityNameH: \"Hanover\",\n      zipCodeH: \"03755\",\n      streetNum: 0,\n      streetName: \"\",\n      aptNum: \"\",\n      cityNameM: \"\",\n      stateNameM: \"\",\n      zipCodeM: \"\",\n      phoneNum: \"\",\n      emailAddress: \"\",\n      trimmedDataURL: null,\n      absenteeBallotImg: null,\n      previewPDF: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sigPad = {};\n  }\n\n  //want to add an \"are you sure you want to submit\"\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"registration-form-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Click the following button to fill out an absentee ballot! Note that once the form is complete, the application will automatically be submitted, and you will receive a ballot at your given address\"), React.createElement(Button, {\n      className: \"show-form-button\",\n      onClick: () => this.toggleShowForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Complete Form\")), this.showFormModal(), this.showPDFPreview(), React.createElement(\"img\", {\n      src: this.state.trimmedDataURL,\n      alt: \"signature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/Users/rohithmandavilli/Desktop/Dartmouth/Projects/absentee-ballot-form/src/components/registration.js"],"names":["React","Component","Button","Modal","PageHeader","SignaturePad","AbsenteeApplication","RegistrationForm","constructor","props","toggleShowForm","setState","prevState","showForm","togglePreview","previewPDF","console","log","state","handleChange","event","target","name","value","handleSubmit","showPDFPreview","clearCanvas","sigPad","clear","trimAndSaveCanvas","trimmedDataURL","getTrimmedCanvas","toDataURL","handleSubmitApp","lastName","firstName","middleName","titleName","homeAddress","cityNameH","zipCodeH","streetNum","showFormModal","width","height","className","ref","streetName","aptNum","cityNameM","stateNameM","zipCodeM","phoneNum","emailAddress","absenteeBallotImg","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAO,6BAAP;AACA,OAAO,uBAAP;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACvCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6BnBC,cA7BmB,GA6BF,MAAM;AACrB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,QAAQ,EAAE,CAACD,SAAS,CAACC;AADK,OAAL,CAAvB;AAGD,KAjCkB;;AAAA,SAmCnBC,aAnCmB,GAmCH,MAAM;AACpB,WAAKH,QAAL,CAAcC,SAAS,KAAK;AAC1BG,QAAAA,UAAU,EAAE,CAACH,SAAS,CAACG;AADG,OAAL,CAAvB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,UAAvB;AACD,KAxCkB;;AAAA,SA0CnBI,YA1CmB,GA0CHC,KAAD,IAAW;AACxB,WAAKT,QAAL,CAAc;AACZ,SAACS,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AADtB,OAAd;AAGD,KA9CkB;;AAAA,SAiDnBC,YAjDmB,GAiDHJ,KAAD,IAAW;AACxBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAKR,cAAL;AACA,WAAKI,aAAL;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAKO,cAAL;AACD,KAxDkB;;AAAA,SA0DnBC,WA1DmB,GA0DL,MAAM;AAClB,WAAKC,MAAL,CAAYC,KAAZ;AACD,KA5DkB;;AAAA,SA8DnBC,iBA9DmB,GA8DC,MAAM;AACxB,WAAKlB,QAAL,CAAc;AAACmB,QAAAA,cAAc,EAAE,KAAKH,MAAL,CAAYI,gBAAZ,GAC5BC,SAD4B,CAClB,WADkB;AAAjB,OAAd;AAED,KAjEkB;;AAAA,SAmEnBC,eAnEmB,GAmED,MAAM;AACtB,WAAKnB,aAAL;AACD,KArEkB;;AAAA,SAuEnBW,cAvEmB,GAuEF,MAAM;AACrB,aACE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,wBAAV;AAAmC,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWH,UAApD;AAAgE,QAAA,MAAM,EAAE,KAAKD,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAER,mBAAxC;AAA6D,QAAA,GAAG,EAAC,qBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,KAAKY,KAAL,CAAWgB,QAA3C,CAFF,EAGE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKhB,KAAL,CAAWiB,SAA5C,CAHF,EAIE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKjB,KAAL,CAAWkB,UAA7C,CAJF,EAKE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKlB,KAAL,CAAWmB,SAAvC,CALF,EAME;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmC,KAAKnB,KAAL,CAAWoB,WAA9C,CANF,EAOE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKpB,KAAL,CAAWqB,SAA5C,CAPF,EAQE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKrB,KAAL,CAAWsB,QAA5C,CARF,EASE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC,KAAKtB,KAAL,CAAWuB,SAA/C,CATF,EAUE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKvB,KAAL,CAAWoB,WAA7C,CAVF,EAWE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKpB,KAAL,CAAWqB,SAA5C,CAXF,EAYE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKrB,KAAL,CAAWsB,QAA5C,CAZF,EAaE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC,KAAKtB,KAAL,CAAWuB,SAA/C,CAbF,CAJF,EAmBE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAC,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,MAAM,KAAK3B,aAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,IAAI,EAAC,QAA7C;AAAsD,QAAA,OAAO,EAAE,MAAM,KAAKmB,eAAL,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CAnBF,CADF;AA0BD,KAlGkB;;AAAA,SAoGnBS,aApGmB,GAoGH,MAAM;AACpB,aACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWL,QAAxB;AAAkC,QAAA,MAAM,EAAE,KAAKH,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CADF,EAIE,oBAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,EAAE,EAAC,qBAAT;AAA+B,QAAA,QAAQ,EAAE,KAAKc,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,WAAvD;AAAmE,QAAA,QAAQ,EAAE,KAAKL,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,YAAvD;AAAoE,QAAA,QAAQ,EAAE,KAAKA,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,UAAvD;AAAkE,QAAA,QAAQ,EAAE,KAAKA,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,WAAvD;AAAmE,QAAA,QAAQ,EAAE,KAAKA,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAbF,CADF,CALF,EAyBE,oBAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAzBF,EA0BE,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,EAAE,EAAC,qBAAT;AAA+B,QAAA,QAAQ,EAAE,KAAKK,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,aAAvD;AAAqE,QAAA,QAAQ,EAAE,KAAKL,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAHF,EAOE;AAAG,QAAA,EAAE,EAAC,4BAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE,oBAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iKATF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,WAAvD;AAAmE,QAAA,QAAQ,EAAE,KAAKA,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,YAAvD;AAAoE,QAAA,QAAQ,EAAE,KAAKA,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAfF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,QAAvD;AAAgE,QAAA,QAAQ,EAAE,KAAKA,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAnBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,WAAvD;AAAmE,QAAA,QAAQ,EAAE,KAAKA,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAvBF,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,YAAvD;AAAoE,QAAA,QAAQ,EAAE,KAAKA,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CA3BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,UAAvD;AAAkE,QAAA,QAAQ,EAAE,KAAKA,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CA/BF,CADF,CA1BF,EAgEE,oBAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAhEF,EAiEE,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,EAAE,EAAC,qBAAT;AAA+B,QAAA,QAAQ,EAAE,KAAKK,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,UAAvD;AAAkE,QAAA,QAAQ,EAAE,KAAKL,YAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAkD,QAAA,IAAI,EAAC,cAAvD;AAAsE,QAAA,QAAQ,EAAE,KAAKA,YAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADA,EAcA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAE;AAACwB,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,MAAM,EAAE,GAArB;AAA0BC,UAAAA,SAAS,EAAE;AAArC,SAA3B;AACA,QAAA,GAAG,EAAGC,GAAD,IAAS;AAAE,eAAKnB,MAAL,GAAcmB,GAAd;AAAmB,SADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdA,EAkBA,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAE,MAAM,KAAKpB,WAAL,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBA,EAmBA,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,MAAM,KAAKG,iBAAL,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAnBA,CAjEF,EAsFE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAC,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,MAAM,KAAKnB,cAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,IAAI,EAAC,QAA7C;AAAsD,QAAA,OAAO,EAAE,MAAM,KAAKc,YAAL,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,CAtFF,CADF;AA6FD,KAlMkB;;AAEjB,SAAKN,KAAL,GAAa;AACXL,MAAAA,QAAQ,EAAE,KADC;AAEXsB,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,UAAU,EAAE,EAHD;AAIXF,MAAAA,QAAQ,EAAE,EAJC;AAKXG,MAAAA,SAAS,EAAE,EALA;AAMXC,MAAAA,WAAW,EAAE,EANF;AAOXC,MAAAA,SAAS,EAAE,SAPA;AAQXC,MAAAA,QAAQ,EAAE,OARC;AASXC,MAAAA,SAAS,EAAE,CATA;AAUXM,MAAAA,UAAU,EAAE,EAVD;AAWXC,MAAAA,MAAM,EAAE,EAXG;AAYXC,MAAAA,SAAS,EAAE,EAZA;AAaXC,MAAAA,UAAU,EAAE,EAbD;AAcXC,MAAAA,QAAQ,EAAE,EAdC;AAeXC,MAAAA,QAAQ,EAAE,EAfC;AAgBXC,MAAAA,YAAY,EAAE,EAhBH;AAiBXvB,MAAAA,cAAc,EAAE,IAjBL;AAkBXwB,MAAAA,iBAAiB,EAAE,IAlBR;AAmBXvC,MAAAA,UAAU,EAAE;AAnBD,KAAb;AAqBA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBoC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK/B,YAAL,GAAoB,KAAKA,YAAL,CAAkB+B,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK5B,MAAL,GAAc,EAAd;AAED;;AAwKD;AAEA6B,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8MAFJ,EAII,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAE,MAAM,KAAK9C,cAAL,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADF,EAOG,KAAKgC,aAAL,EAPH,EAQG,KAAKjB,cAAL,EARH,EASE;AAAK,MAAA,GAAG,EAAE,KAAKP,KAAL,CAAWY,cAArB;AAAqC,MAAA,GAAG,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAcD;;AArNsC;;AAwNzC,eAAevB,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport PageHeader from './pageheader.js'\nimport '../styles/registration.scss'\nimport '../styles/modals.scss'\nimport SignaturePad from 'react-signature-canvas'\nimport AbsenteeApplication from '../images/absentee-ballot.png'\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: false,\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      titleName: \"\",\n      homeAddress: \"\",\n      cityNameH: \"Hanover\",\n      zipCodeH: \"03755\",\n      streetNum: 0,\n      streetName: \"\",\n      aptNum: \"\",\n      cityNameM: \"\",\n      stateNameM: \"\",\n      zipCodeM: \"\",\n      phoneNum: \"\",\n      emailAddress: \"\",\n      trimmedDataURL: null,\n      absenteeBallotImg: null,\n      previewPDF: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sigPad = {};\n\n  }\n\n  toggleShowForm = () => {\n    this.setState(prevState => ({\n      showForm: !prevState.showForm,\n    }));\n  }\n\n  togglePreview = () => {\n    this.setState(prevState => ({\n      previewPDF: !prevState.previewPDF,\n    }));\n    console.log(this.state.previewPDF);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  //need to do the overlaying here\n  handleSubmit = (event) => {\n    console.log(\"ok we made it to the preview\");\n    console.log(this.state);\n    this.toggleShowForm();\n    this.togglePreview();\n    console.log(this.state);\n    this.showPDFPreview();\n  }\n\n  clearCanvas = () => {\n    this.sigPad.clear();\n  }\n\n  trimAndSaveCanvas = () => {\n    this.setState({trimmedDataURL: this.sigPad.getTrimmedCanvas()\n      .toDataURL('image/png')})\n  }\n\n  handleSubmitApp = () => {\n    this.togglePreview();\n  }\n  //need to display the preview ehre\n  showPDFPreview = () => {\n    return (\n      <Modal id=\"mod-application-previw\" show={this.state.previewPDF} onHide={this.togglePreview}>\n        <Modal.Header>\n          <Modal.Title>Application Preview</Modal.Title>\n        </Modal.Header>\n        <div className=\"image\">\n          <img className=\"application-image\" src={AbsenteeApplication} alt=\"application-preview\" />\n          <p className=\"image-last-name\">{this.state.lastName}</p>\n          <p className=\"image-first-name\">{this.state.firstName}</p>\n          <p className=\"image-middle-name\">{this.state.middleName}</p>\n          <p className=\"image-title\">{this.state.titleName}</p>\n          <p className=\"image-home-address\">{this.state.homeAddress}</p>\n          <p className=\"image-cityname-h\">{this.state.cityNameH}</p>\n          <p className=\"image-ziopcode-h\">{this.state.zipCodeH}</p>\n          <p className=\"image-street-number\">{this.state.streetNum}</p>\n          <p className=\"image-street-name\">{this.state.homeAddress}</p>\n          <p className=\"image-cityname-h\">{this.state.cityNameH}</p>\n          <p className=\"image-ziopcode-h\">{this.state.zipCodeH}</p>\n          <p className=\"image-street-number\">{this.state.streetNum}</p>\n        </div>\n        <Modal.Footer className=\"ballot-modal-footer\">\n          <Button className=\"ballot-modal-button\" onClick={() => this.togglePreview()}>Cancel</Button>\n          <Button className=\"ballot-modal-button\" type=\"submit\" onClick={() => this.handleSubmitApp()}>Yes this looks right!</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n  showFormModal = () => {\n    return (\n      <Modal show={this.state.showForm} onHide={this.toggleShowForm}>\n        <Modal.Header>\n          <Modal.Title>Absentee Ballot Application</Modal.Title>\n        </Modal.Header>\n        <Modal.Title id=\"section-modal-title\">Name</Modal.Title>\n        <Modal.Body className=\"ballot-modal-body\">\n          <form id=\"applicant-info-form\" onSubmit={this.handleSubmit}>\n            <p>\n              First Name:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"firstName\" onChange={this.handleChange}/>\n            </p>\n            <p>\n              Middle Name:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"middleName\" onChange={this.handleChange}/>\n            </p>\n            <p>\n              Last Name:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"lastName\" onChange={this.handleChange}/>\n            </p>\n            <p>\n              Title (Jr., Sr., II, III) (N/A if nothing):\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"titleName\" onChange={this.handleChange}/>\n            </p>\n          </form>\n        </Modal.Body>\n        <Modal.Title id=\"section-modal-title\">Address Information</Modal.Title>\n        <Modal.Body className=\"ballot-modal-body\">\n          <form id=\"applicant-info-form\" onSubmit={this.handleSubmit}>\n            <Modal.Title id=\"address-modal-title\">This is where you last registered to vote, if you don't know,\n           please put your last dorm number and name.</Modal.Title>\n            <p>\n              Home Address:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"homeAddress\" onChange={this.handleChange}/>\n            </p>\n            <p id=\"home-address-example-modal\">(ex: '307 Richardson Hall' or '3 Ivy Lane')</p>\n            <br />\n            <Modal.Title id=\"address-modal-title\">This is where your ballot will be mailed. Due to uncertainty regarding\n            when the mail will be sent, please list where you will be at the end of August</Modal.Title>\n            <p>\n              Street Number/P.O. Box:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"streetNum\" onChange={this.handleChange}/>\n            </p>\n            <p>\n              Street Name:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"streetName\" onChange={this.handleChange}/>\n            </p>\n            <p>\n              Apt/Unit Name (N/A if nothing):\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"aptNum\" onChange={this.handleChange}/>\n            </p>\n            <p>\n              City/Town:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"cityNameM\" onChange={this.handleChange}/>\n            </p>\n            <p>\n              State:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"stateNameM\" onChange={this.handleChange}/>\n            </p>\n            <p>\n              Zip Code:\n              <input className=\"ballot-form-labels\" type=\"text\" name=\"zipCodeM\" onChange={this.handleChange}/>\n            </p>\n          </form>\n        </Modal.Body>\n        <Modal.Title id=\"section-modal-title\">Contact Information</Modal.Title>\n        <Modal.Body className=\"ballot-modal-body\">\n        <form id=\"applicant-info-form\" onSubmit={this.handleSubmit}>\n          <p>\n            Phone Number:\n            <input className=\"ballot-form-labels\" type=\"text\" name=\"phoneNum\" onChange={this.handleChange}/>\n          </p>\n          <p>\n            Email Address:\n            <input className=\"ballot-form-labels\" type=\"text\" name=\"emailAddress\" onChange={this.handleChange}/>\n          </p>\n          <p>\n            Signature:\n          </p>\n        </form>\n        <div className=\"sigContainer\">\n          <SignaturePad canvasProps={{width: 400, height: 200, className: \"sigPad\"}}\n          ref={(ref) => { this.sigPad = ref }} />\n        </div>\n        <Button className=\"signature-clear-button\" onClick={() => this.clearCanvas()}>Clear</Button>\n        <Button className=\"signature-save-button\" onClick={() => this.trimAndSaveCanvas()}>Save Signature</Button>\n        </Modal.Body>\n        <Modal.Footer className=\"ballot-modal-footer\">\n          <Button className=\"ballot-modal-button\" onClick={() => this.toggleShowForm()}>Cancel</Button>\n          <Button className=\"ballot-modal-button\" type=\"submit\" onClick={() => this.handleSubmit()}>Submit Application</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n  //want to add an \"are you sure you want to submit\"\n\n  render() {\n    return (\n      <>\n        <div className=\"registration-form-page\">\n            <PageHeader></PageHeader>\n            <p>Click the following button to fill out an absentee ballot! Note that once the form is complete, the application will automatically\n            be submitted, and you will receive a ballot at your given address</p>\n            <Button className=\"show-form-button\" onClick={() => this.toggleShowForm()}>Complete Form</Button>\n        </div>\n        {this.showFormModal()}\n        {this.showPDFPreview()}\n        <img src={this.state.trimmedDataURL} alt=\"signature\" />\n      </>\n\n    );\n  }\n}\n\nexport default RegistrationForm\n"]},"metadata":{},"sourceType":"module"}